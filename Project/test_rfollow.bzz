# Use Shift + Click to select a robot
# When a robot is selected, its variables appear in this editor

# Use Ctrl + Click (Cmd + Click on Mac) to move a selected robot to a different location



# Put your global variables here



# This function is executed every time you press the 'execute' button
function init() {
	s = swarm.create(1)
  rand_count = 0
	r_count = 0
	init_obj = {.x = 0.3, .y = -1.0}
	home = {.x = -1.5, .y = -0.5}
	state = 0 #random walk state
	posx = pose.position.x
	posy = pose.position.y
	set_leds(255,0,0) # red
	vl = 12.0
	vr = 12.0
	flag = 0
	r_c = 0
	recruited = {.0 = 0,.1 = 0,.2 = 0, .3 = 0}
	set_wheels(vl,vr)
   # put your code here
}



# This function is executed at each time step
# It must contain the logic of your controller
function step() {
	if (id > 0) {
		ob_avoid()
		neighbors.broadcast("mypose",pose.position)}
	else {
		neighbors.listen("mypose",
			function(vid,value,rid) {
				togox = -1.5 - pose.position.x
				togoy = -1.5 - pose.position.y
				togo_mag = math.sqrt(togox^2 + togoy^2)
				togo_t = (pose.orientation.yaw - math.atan(togoy,togox))
				if (togo_t > 3.1416) {
					togo_t = togo_t - 6.2832}
				else if (togo_t < -3.1416) {
					togo_t = togo_t + 6.2832}
				follow(togox,togoy,togo_t,togo_mag)
			})
	}
   # put your code here
}

function ob_avoid() {
	dvl = 4.0
	dvr = 4.0
	flag = 0

	foreach(proximity, function(key, value) {
		if (value.value > 0) {
			flag = flag + 1
			if (value.angle == 0) {
				vr = -6.0
				vl = 6.0
				set_wheels(vl,vr)
			}
			else if ((value.angle > 3) and (value.angle < 3.15)) {
				vl = 8.0
				vr = 8.0
			}
			else {
				vl = vl + dvl*math.sin(value.angle)
				vr = vr - 1.1*dvr*math.sin(value.angle)
				set_wheels(vl,vr)}
		}
		#If no objects in proximity, perform random walk
		else if (flag == 0) {
			if (rand_count%30 == 0) {
 		 		vl = 12.0
 				vr = math.rng.uniform(2.0,17.0)
				set_wheels(vl,vr)}
			rand_count = rand_count + 1

		}
		#If more than 3 sensors set off, turn around
		else if (flag > 3) {
			vl = 7.0
			vr = -6.0
			set_wheels(vl,vr)
		}
	})
}

function follow(tg_x,tg_y,tg_t,tg_mag) {
	tg_t_thresh = 0.05
	if (tg_t < tg_t_thresh*-1.0) {
		set_wheels(10.0,15.0)}
	else if (tg_t > tg_t_thresh) {
		set_wheels(15.0,10.0)}
	else if (tg_mag > 0.2) {
		set_wheels(15.0,15.0)}
	else {
		set_wheels(0.0,0.0)}
	tg_t = (pose.orientation.yaw - math.atan(tg_y,tg_x))
}	

# automatically by ARGoS.
function reset() {
   # put your code here
}



# This function is executed only once, when the robot is removed
# from the simulation
function destroy() {
   # put your code here
}
